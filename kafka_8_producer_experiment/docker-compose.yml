
version: '3.5'
services:

  zookeeper:
    image: wurstmeister/zookeeper
    # ports:
    #   - "2181:2181"
    networks:
      kafka_net:
    deploy:
      replicas: 1
      placement:    
        constraints:
          - node.labels.name==dtwins1
# =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
  python_producer_1:
    container_name: python_producer_1  
    image: python-kafka:latest
    stdin_open: true
    tty: true
    depends_on:
     - zookeeper
    networks:
     kafka_net:
    deploy:
      replicas: 1
      placement:    
        constraints:
          - node.labels.kafka_role==producer_pair

  python_consumer_1:
    container_name: python_consumer_1  
    image: python-kafka:latest
    stdin_open: true
    tty: true
    depends_on:
     - python_producer_1
    networks:
     kafka_net:
    deploy:
      replicas: 1
      placement:    
        constraints:
          - node.labels.kafka_role==producer_pair
# =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-          
  python_producer_2:
    container_name: python_producer_2  
    image: python-kafka:latest
    stdin_open: true
    tty: true
    depends_on:
     - python_consumer_1
    networks:
     kafka_net:
    deploy:
      replicas: 1
      placement:    
        constraints:
          - node.labels.kafka_role==producer_pair

  python_consumer_2:
    container_name: python_consumer_2  
    image: python-kafka:latest
    stdin_open: true
    tty: true
    depends_on:
     - python_producer_2
    networks:
     kafka_net:
    deploy:
      replicas: 1
      placement:    
        constraints:
          - node.labels.kafka_role==producer_pair
# =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
  python_producer_3:
    container_name: python_producer_3  
    image: python-kafka:latest
    stdin_open: true
    tty: true
    depends_on:
     - python_consumer_2
    networks:
     kafka_net:
    deploy:
      replicas: 1
      placement:    
        constraints:
          - node.labels.kafka_role==producer_pair

  python_consumer_3:
    container_name: python_consumer_3  
    image: python-kafka:latest
    stdin_open: true
    tty: true
    depends_on:
     - python_producer_3
    networks:
     kafka_net:
    deploy:
      replicas: 1
      placement:    
        constraints:
          - node.labels.kafka_role==producer_pair

# =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-

  kafka:
    container_name: kafka_1
    image: wurstmeister/kafka:latest
    depends_on:
     - python_producer_1
     - python_consumer_1
     - python_producer_2
     - python_consumer_2
     - python_producer_3
     - python_consumer_3
     - python_producer_4
     - python_consumer_4
     - zookeeper
    # ports:
    #   - target: 9094
    #     published: 9094
    #     protocol: tcp
    #     mode: host
    environment:
      HOSTNAME_COMMAND: "docker info | grep ^Name: | cut -d' ' -f 2"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INSIDE://:9092,OUTSIDE://:9094
      KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://:9094
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
     kafka_net:
    deploy:
      replicas: 3
        constraints:
          - node.labels.kafka_role==kafka_node

networks:
  kafka_net:
   name: kafka_net
